{"version":3,"sources":["images/logo.svg","images/win.svg","images/loss.svg","utils/api.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/DeleteCardPopup.js","components/ProtectedRoute.js","utils/utils.js","components/Register.js","components/Login.js","components/InfoTooltip.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","api","options","this","_url","url","_cohort","cohort","_authorization","headers","authorization","_contentType","fetch","then","_handleResponse","name","about","method","body","JSON","stringify","link","data","cardId","avatar","result","ok","json","console","log","Promise","reject","statusText","localStorage","getItem","Header","history","useHistory","useState","email","setEmail","React","useEffect","getInfoUser","res","catch","e","message","className","src","logo","alt","path","to","onClick","removeItem","push","CurrentUserContext","createContext","Card","props","cardinfoId","useContext","card","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","aria-label","type","onCardDelete","onCardClick","onCardLike","count","Main","onEditAvatar","userAvatar","userName","onEditProfile","userDescription","onAddPlace","cards","map","handleCardLike","handleCardClick","handleButtonDeleteClick","key","length","Footer","ImagePopup","isOpen","onClose","title","PopupWithForm","onSubmit","action","children","Component","AddPlacePopup","setName","setLink","preventDefault","bind","id","value","onChange","target","placeholder","required","EditProfilePopup","currentUser","description","setDescription","onUpdateUser","EditAvatarPopup","onUpdateAvatar","textInput","handleSubmit","ref","input","DeleteCardPopup","onDeleteCard","ProtectedRoute","component","loggedIn","BASE_URL","Register","password","setPassword","evt","Accept","response","err","auth","notify","popup","autoComplete","Login","setItem","token","onAuth","error","InfoTooltip","image","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeletePopupOpen","setIsDeletePopupOpen","isImagePopupOpen","setIsImagePopupOpen","successPopupOpen","setSuccessPopupOpen","failPopupOpen","setFailPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setLoggedIn","success","setSuccess","closeAllPopups","getInitialCards","tokenCheck","Provider","removeLikes","newCard","newCards","c","addLikes","dataAvatar","changeAvatar","dataProfile","changeProfile","finally","infoNewCard","addNewCard","deleteCards","filter","win","loss","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.563e409a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/win.e38b395c.svg\";","module.exports = __webpack_public_path__ + \"static/media/loss.4072126c.svg\";","class API {\r\n  constructor(options) {\r\n    this._url = options.url;\r\n    this._cohort = options.cohort;\r\n    this._authorization = options.headers.authorization;\r\n    this._contentType = options.headers[\"Content-type\"];\r\n  }\r\n  //загружаем данные о профиле с сервера--------------\r\n  getInfoUser() {\r\n    return fetch(`${this._url}/users/info`, {\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-type\": `${this._contentType}`,\r\n      },\r\n    })\r\n      .then(this._handleResponse)\r\n      \r\n  }\r\n  //загружаем начальные карточки с сервера------------------\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-type\": `${this._contentType}`,\r\n      },\r\n    })\r\n      .then(this._handleResponse)\r\n      \r\n  }\r\n\r\n  //редактируем профиль-------------\r\n  changeProfile(name, about) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-type\": `${this._contentType}`,\r\n      },\r\n      body: JSON.stringify({\r\n        name: `${name}`,\r\n        about: `${about}`,\r\n      }),\r\n    })\r\n      .then(this._handleResponse)\r\n      \r\n  }\r\n\r\n  //добавляем новую карточку-------------\r\n  addNewCard(name, link) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-type\": `${this._contentType}`,\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    })\r\n      .then(this._handleResponse)\r\n      .then(data => data.data);  \r\n  }\r\n\r\n  //Отображение количества лайков карточки-------------\r\n  addLikes(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-type\": `${this._contentType}`,\r\n      },\r\n    })\r\n      .then(this._handleResponse)\r\n      .then(data => data.data);\r\n  }\r\n  //_______________________________________\r\n  removeLikes(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-type\": `${this._contentType}`,\r\n      },\r\n    })\r\n      .then(this._handleResponse)\r\n      .then(data => data.data);\r\n  }\r\n\r\n  //Удаление карточки-------------------------------------------------\r\n  deleteCards(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-type\": `${this._contentType}`,\r\n      },\r\n    })\r\n      .then(this._handleResponse)\r\n      .then(data => data.data);\r\n  }\r\n  //смена аватара-------------\r\n  changeAvatar(link) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._authorization,\r\n        \"Content-type\": `${this._contentType}`,\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: `${link}`,\r\n      }),\r\n    })\r\n      .then(this._handleResponse)\r\n      \r\n  }\r\n\r\n  \r\n  _handleResponse(result) {\r\n    if (result.ok) {\r\n      return result.json();\r\n    } else {\r\n      console.log(\"_handleResponse rejection\");\r\n      return Promise.reject(result.statusText);\r\n    }\r\n  }\r\n}\r\n\r\n//создание экземпляра API______________________________________________________\r\nconst api = new API({\r\n  url: \"https://api.pzd.students.nomoreparties.space\",\r\n  headers: {\r\n    authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n","import React, { useState } from \"react\";\r\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport logo from \"../images/logo.svg\";\r\nimport api from \"../utils/api\";\r\n\r\nfunction Header() {\r\n  const history = useHistory();\r\n  function signOut() {\r\n    localStorage.removeItem(\"jwt\");\r\n    history.push(\"/sign-in\");\r\n  }\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    api.getInfoUser()\r\n    .then((res) => {\r\n      setEmail(res.data.email);\r\n    })\r\n    .catch(e => console.log(e.message));\r\n  }, [email]);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <img src={logo} alt=\"логотип\" className=\"header__logo\" />\r\n      <Switch>\r\n        <Route path=\"/sign-up\">\r\n          <Link to=\"sign-in\" className=\"header__title\">\r\n            Войти\r\n          </Link>\r\n        </Route>\r\n        <Route path=\"/sign-in\">\r\n          <Link to=\"sign-up\" className=\"header__title\">\r\n            Регистрация\r\n          </Link>\r\n        </Route>\r\n        <Route path=\"/profile\">\r\n          <div>\r\n            <span className=\"header__title-email\">{email}</span>\r\n            <button className=\"header__button\" onClick={signOut}>\r\n              Выйти\r\n            </button>\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card(props) {\r\n  const cardinfoId = React.useContext(CurrentUserContext);\r\n  const card = props.card;\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner === cardinfoId._id;\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = `card__button-delete ${\r\n    isOwn ? \"\" : \"card__button-delete_hidden\"\r\n  }`;\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some((i) => i === cardinfoId._id);\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = `card__button ${isLiked ? \"card__button_active\" : \"\"}`;\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      <button\r\n        aria-label=\"delete\"\r\n        type=\"button\"\r\n        className={cardDeleteButtonClassName}\r\n        onClick={props.onCardDelete}\r\n      />\r\n      <img\r\n        src={props.url}\r\n        alt=\"\"\r\n        className=\"card__image\"\r\n        onClick={props.onCardClick}\r\n      />\r\n      <div className=\"card__restangle\">\r\n        <p className=\"card__caption\">{props.name}</p>\r\n        <div className=\"card__like\">\r\n          <button onClick={props.onCardLike} type=\"button\" className={cardLikeButtonClassName} />\r\n          <p className=\"card__like-counter\">{props.count}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card.js\";\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"change-avatar\"\r\n          className=\"profile__avatar-pen\"\r\n          onClick={props.onEditAvatar}\r\n        />\r\n        <img\r\n          src={`${props.userAvatar}`}\r\n          alt=\"аватар\"\r\n          className=\"profile__avatar\"\r\n        />\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__string\">\r\n            <h1 className=\"profile__name\">{props.userName}</h1>\r\n            <button\r\n              type=\"button\"\r\n              aria-label=\"open\"\r\n              className=\"profile__button-edit\"\r\n              onClick={props.onEditProfile}\r\n            />\r\n          </div>\r\n          <p className=\"profile__position\">{props.userDescription}</p>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"add\"\r\n          className=\"profile__button-add\"\r\n          onClick={props.onAddPlace}\r\n        />\r\n      </section>\r\n      <ul className=\"elements\">\r\n        {props.cards.map((card) => (\r\n          <Card\r\n            card={card}\r\n            onCardLike={() => props.handleCardLike(card)}\r\n            onCardClick={() => props.handleCardClick(card)}\r\n            onCardDelete={() => props.handleButtonDeleteClick(card)}\r\n            key={card._id}\r\n            url={card.link}\r\n            name={card.name}\r\n            count={card.likes.length}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__paragraph\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <section\r\n      className={`popup popup_${props.name} ${\r\n        props.isOpen ? \"popup_opened\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"popup__wrapper\">\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"close\"\r\n          className=\"popup__button-close popup__button-close_photo\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n        <img src={props.url} className=\"popup__image\" />\r\n        <h2 className=\"popup__title popup__title_open-photo\">{props.title}</h2>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React from \"react\";\r\n\r\nexport default class PopupWithForm extends React.Component {\r\n\r\n  render(){\r\n    return (\r\n      <section\r\n        className={`popup popup_${this.props.name} ${\r\n          this.props.isOpen ? \"popup_opened\" : \"\"\r\n        }`}\r\n      >\r\n        <form\r\n          onSubmit={this.props.onSubmit}\r\n          name={this.props.name}\r\n          action=\"#\"\r\n          className=\"popup__container\"\r\n        >\r\n          <button\r\n            type=\"button\"\r\n            aria-label=\"close\"\r\n            className=\"popup__button-close\"\r\n            onClick={this.props.onClose}\r\n          ></button>\r\n          <h2 className=\"popup__title\">{this.props.title}</h2>\r\n          {this.props.children}\r\n        </form>\r\n      </section>\r\n    )};\r\n}","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [name, setName] = React.useState(\"\");\r\n  const [link, setLink] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    setName(\"\");\r\n    setLink(\"\");\r\n  }, [props.isOpen]);\r\n\r\n  function handleChangePlace(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleChangeNewLink(e) {\r\n    setLink(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onAddPlace({\r\n      name: name,\r\n      link: link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"add-photo\"\r\n      title=\"Новое место\"\r\n      onSubmit={handleSubmit.bind(this)}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n    >\r\n      <fieldset className=\"popup__wrapper-input\">\r\n        <input\r\n          id=\"name-place\"\r\n          name=\"place\"\r\n          value={name || \"\"}\r\n          onChange={handleChangePlace}\r\n          className=\"popup__input\"\r\n          type=\"text\"\r\n          placeholder=\"Название\"\r\n          required\r\n        />\r\n        <span id=\"name-place-error\" className=\"popup__error\"></span>\r\n      </fieldset>\r\n      <fieldset className=\"popup__wrapper-input\">\r\n        <input\r\n          type=\"url\"\r\n          id=\"url-photo\"\r\n          name=\"newLink\"\r\n          value={link || \"\"}\r\n          onChange={handleChangeNewLink}\r\n          className=\"popup__input\"\r\n          type=\"text\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          required\r\n        />\r\n        <span id=\"url-photo-error\" className=\"popup__error\"></span>\r\n      </fieldset>\r\n      <button id=\"button-create\" type=\"submit\" className=\"popup__button\">\r\n        Сохранить\r\n      </button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateUser({\r\n      name: name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  function handleChangeName(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleChangeDescription(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"edit-profile\"\r\n      title=\"Редактировать профиль\"\r\n      onSubmit={handleSubmit.bind(this)}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n    >\r\n      <fieldset className=\"popup__wrapper-input\">\r\n        <input\r\n          id=\"name\"\r\n          name=\"name\"\r\n          value={name || \"\"}\r\n          onChange={handleChangeName}\r\n          className=\"popup__input\"\r\n          type=\"text\"\r\n          placeholder=\"Имя\"\r\n          required\r\n        />\r\n      </fieldset>\r\n      <fieldset className=\"popup__wrapper-input\">\r\n        <input\r\n          id=\"position\"\r\n          name=\"position\"\r\n          value={description || \"\"}\r\n          onChange={handleChangeDescription}\r\n          className=\"popup__input\"\r\n          type=\"text\"\r\n          placeholder=\"О себе\"\r\n          required\r\n        />\r\n        <span id=\"position-error\" className=\"popup__error\"></span>\r\n      </fieldset>\r\n      <button type=\"submit\" className=\"popup__button popup__button_profile\">\r\n        Сохранить\r\n      </button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\n\r\nexport default class EditAvatarPopup extends React.Component {\r\n  // В 11 проектной нужно было в одной форме к инпуту применить ref\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.onUpdateAvatar({ link: this.textInput.value });\r\n    this.textInput.value = \"\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PopupWithForm\r\n        name=\"change-avatar\"\r\n        title=\"Обновить аватар\"\r\n        isOpen={this.props.isOpen}\r\n        onClose={this.props.onClose}\r\n        onSubmit={this.handleSubmit.bind(this)}\r\n      >\r\n        <fieldset className=\"popup__wrapper-input\">\r\n          <input\r\n            type=\"url\"\r\n            ref={(input) => {\r\n              this.textInput = input;\r\n            }}\r\n            id=\"url-avatar\"\r\n            name=\"avatar\"\r\n            className=\"popup__input\"\r\n            placeholder=\"Ссылка на аватар\"\r\n            required\r\n          />\r\n          <span id=\"url-avatar-error\" className=\"popup__error\"></span>\r\n        </fieldset>\r\n        <button\r\n          id=\"change-avatar-button\"\r\n          type=\"submit\"\r\n          className=\"popup__button\"\r\n        >\r\n          Сохранить\r\n        </button>\r\n      </PopupWithForm>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\n\r\nfunction DeleteCardPopup(props) {\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onDeleteCard();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"delete-card\"\r\n      title=\"Вы уверены?\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit.bind(this)}\r\n    >\r\n      <button\r\n        id=\"button-delete\"\r\n        type=\"submit\"\r\n        className=\"popup__button popup__button_delete-card\"\r\n      >\r\n        Да\r\n      </button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default DeleteCardPopup;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  return (\r\n    <Route>\r\n      {() =>\r\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\r\n      }\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","export const BASE_URL = \"https://api.pzd.students.nomoreparties.space\";\r\n\r\nexport const register = (password, email, name, about, avatar) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      password,\r\n      email,\r\n      name,\r\n      about,\r\n      avatar\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const authorize = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ password, email }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      localStorage.setItem(\"jwt\", data.token);\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../utils/utils\";\r\n\r\nfunction Register(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    auth.register(password, email,\r\n      'Жак-Ив Густо',\r\n      'Исследователь',\r\n      'https://infokotiki.ru/wp-content/uploads/2019/01/kot-spit-s-visunutim-yazikom.jpg')\r\n      .then((res) => {\r\n        history.push(\"/sign-in\");\r\n        props.notify();\r\n        props.popup();\r\n    })\r\n    .catch(err => {\r\n      console.log(\r\n        \"Что-то пошло не так!\" || err.message[0].messages[0].message\r\n      );\r\n      props.popup(false);\r\n    })\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\" className=\"user-data\">\r\n      <p className=\"user-data__title\">Регистрация</p>\r\n      <input\r\n        className=\"user-data__input\"\r\n        placeholder=\"Email\"\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(evt) => setEmail(evt.target.value)}\r\n        required\r\n      ></input>\r\n      <input\r\n        className=\"user-data__input\"\r\n        placeholder=\"Пароль\"\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(evt) => setPassword(evt.target.value)}\r\n        required\r\n      ></input>\r\n      <button className=\"user-data__button\">Зарегистрироваться</button>\r\n      <div className=\"user-data__string\">\r\n        <span className=\"user-data__question\">Вы уже зарегистрированы?</span>\r\n        <Link to=\"sign-in\" className=\"user-data__question-button\">\r\n          Войти\r\n        </Link>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../utils/utils\";\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const resetForm = () => {\r\n    setPassword(\"\");\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (!email || !password) {\r\n      return;\r\n    }\r\n\r\n    auth.authorize(password, email)\r\n    .then((res) => {\r\n        resetForm();\r\n        props.onAuth();\r\n        history.push(\"/profile\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Что-то пошло не так!\" || error.message[0].messages[0].message\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\" className=\"user-data\">\r\n      <p className=\"user-data__title\">Вход</p>\r\n      <input\r\n        className=\"user-data__input\"\r\n        placeholder=\"Email\"\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(evt) => setEmail(evt.target.value)}\r\n      ></input>\r\n      <input\r\n        className=\"user-data__input\"\r\n        placeholder=\"Пароль\"\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(evt) => setPassword(evt.target.value)}\r\n      ></input>\r\n      <button className=\"user-data__button\">Войти</button>\r\n      <div className=\"user-data__string\">\r\n        <span className=\"user-data__question\">Еще не зарегистрированы?</span>\r\n        <Link to=\"sign-up\" className=\"user-data__question-button\">\r\n          Регистрация\r\n        </Link>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nfunction InfoTooltip(props) {\r\n\r\n  return (\r\n    <section\r\n        className={`popup ${\r\n          props.isOpen ? \"popup_opened\" : \"\"\r\n        }`}\r\n      >\r\n        <form\r\n          action=\"#\"\r\n          className=\"popup__container\"\r\n        >\r\n          <button\r\n            type=\"button\"\r\n            aria-label=\"close\"\r\n            className=\"popup__button-close\"\r\n            onClick={props.onClose}\r\n          ></button>\r\n          <img src={props.image} alt='' className='popup__image-result'/>\r\n          <h2 className=\"popup__title\">{props.title}</h2>\r\n        </form>\r\n      </section>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;","import React from \"react\";\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport DeleteCardPopup from \"./DeleteCardPopup.js\";\nimport ProtectedRoute from \"./ProtectedRoute.js\";\nimport api from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Register from \"./Register.js\";\nimport Login from \"./Login.js\";\nimport InfoTooltip from \"./InfoTooltip.js\";\nimport win from \"../images/win.svg\";\nimport loss from \"../images/loss.svg\";\n\nfunction App() {\n  //Открытие и закрытие попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(\n    false\n  );\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [successPopupOpen, setSuccessPopupOpen] = React.useState(false);\n  const [failPopupOpen, setFailPopupOpen] = React.useState(false);\n  //Данные карточки для открытия попапа с фото\n  const [selectedCard, setSelectedCard] = React.useState({});\n  //Загрузка с сервера данных страницы\n  const [currentUser, setCurrentUser] = React.useState({});\n  //Загрузка карточек\n  const [cards, setCards] = React.useState([]);\n\n  // Переменная для настройки роутинга\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n  const [success, setSuccess] = React.useState(false);\n\n  function handleRegisterPopupOpen() {\n    success\n      ? setFailPopupOpen(!failPopupOpen)\n      : setSuccessPopupOpen(!successPopupOpen);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n  function handleButtonDeleteClick(selectedCard) {\n    setIsDeletePopupOpen(!isDeletePopupOpen);\n    setSelectedCard(selectedCard);\n  }\n\n  function handleCardClick(selectedCard) {\n    setIsImagePopupOpen(!isImagePopupOpen);\n    setSelectedCard(selectedCard);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsDeletePopupOpen(false);\n    setSuccessPopupOpen(false);\n    setFailPopupOpen(false);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    if (!isLiked) {\n      api\n        .addLikes(card._id)\n        .then((newCard) => {\n          // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n          const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n          // Обновляем стейт\n          setCards(newCards);\n        })\n        .catch((err) => {\n          console.error(err.message);\n        });\n    } else {\n      api\n        .removeLikes(card._id)\n        .then((newCard) => {\n          const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n          setCards(newCards);\n        })\n        .catch((err) => {\n          console.error(err.message);\n        });\n    }\n  }\n\n  function handleCardDelete() {\n    api\n      .deleteCards(selectedCard._id)\n      .then(() => {\n        const newCards = cards.filter(function (c) {\n          return c._id !== selectedCard._id;\n        });\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err.message);\n      });\n  }\n\n  function handleUpdateUser(dataProfile) {\n    api\n      .changeProfile(dataProfile.name, dataProfile.about)\n      .then((res) => {\n        setCurrentUser(res.data);\n      })\n      .catch((err) => {\n        console.error(err.message);\n      })\n      .finally(() => {\n        closeAllPopups();\n      });\n  }\n\n  function handleUpdateAvatar(dataAvatar) {\n    api\n      .changeAvatar(dataAvatar.link)\n      .then((res) => {\n        setCurrentUser(res.data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err.message);\n      });\n  }\n\n  function handleAddPlaceSubmit(infoNewCard) {\n    api\n      .addNewCard(infoNewCard.name, infoNewCard.link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err.message);\n      });\n  }\n\n  React.useEffect(() => {\n    api.getInfoUser()\n      .then((result) => {\n        setCurrentUser(result.data);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }, [setLoggedIn]);\n\n  React.useEffect(() => {\n    api.getInitialCards()\n      .then((data) => {\n        setCards(data.data);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }, [setLoggedIn]);\n\n  const history = useHistory();\n\n  const tokenCheck = () => {\n    let jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      api.getInfoUser().then((res) => {\n        if (res) {\n          setLoggedIn(true);\n          history.push(\"/profile\");\n        } else {\n          localStorage.removeItem(\"jwt\");\n        }\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  function notify(){\n    setSuccess(true);\n  }\n\n  function onAuth() {\n    setLoggedIn(true);\n  };\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Switch>\n          <ProtectedRoute\n            path=\"/profile\"\n            loggedIn={loggedIn}\n            component={Main}\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            userName={currentUser.name}\n            userDescription={currentUser.about}\n            userAvatar={currentUser.avatar}\n            cards={cards}\n            handleCardLike={handleCardLike}\n            handleCardClick={handleCardClick}\n            handleButtonDeleteClick={handleButtonDeleteClick}\n          />\n          <Route path=\"/sign-in\">\n            <Login onAuth={onAuth} tokenCheck={tokenCheck} />\n          </Route>\n          <Route path=\"/sign-up\">\n            <Register notify={notify} popup={handleRegisterPopupOpen} />\n          </Route>\n          <Route>\n            {<Redirect to={`/${loggedIn ? \"profile\" : \"sign-in\"}`} />}\n          </Route>\n        </Switch>\n        <EditAvatarPopup\n          onUpdateAvatar={handleUpdateAvatar}\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n        />\n        <EditProfilePopup\n          onUpdateUser={handleUpdateUser}\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n        />\n\n        <AddPlacePopup\n          onAddPlace={handleAddPlaceSubmit}\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n        />\n        <DeleteCardPopup\n          onDeleteCard={handleCardDelete}\n          isOpen={isDeletePopupOpen}\n          onClose={closeAllPopups}\n        />\n\n        <ImagePopup\n          name=\"open-photo\"\n          url={selectedCard.link}\n          title={selectedCard.name}\n          isOpen={isImagePopupOpen}\n          onClose={closeAllPopups}\n        />\n        <InfoTooltip\n          title=\"Вы успешно зарегистрировались!\"\n          image={win}\n          isOpen={successPopupOpen}\n          onClose={closeAllPopups}\n        />\n        <InfoTooltip\n          title=\"Что-то пошло не так!\nПопробуйте ещё раз.\"\n          image={loss}\n          isOpen={failPopupOpen}\n          onClose={closeAllPopups}\n        />\n        <Footer />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}